#!/usr/bin/env python3
'''
Task Results Class

Copyright (C) 2025 Jason Piszcyk
Email: Jason.Piszcyk@gmail.com

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program (See file: COPYING). If not, see
<https://www.gnu.org/licenses/>.
'''
###########################################################################
#
# Imports
#
###########################################################################
# Shared variables, constants, etc

# System Modules
import enum

# Local app modules
from appcore.multitasking import exception

# Imports for python variable type hints
from typing import Any

# Logging
from appcore.logging import configure_logger
# _log_level = "info"
_log_level = "debug"
log = configure_logger(
        name="TaskManager",
        log_file="/tmp/appcore.log",
        log_level=_log_level,
        to_console=False
)


###########################################################################
#
# Module variables/constants/types
#
###########################################################################


###########################################################################
#
# MessageFrame Class
#
###########################################################################
class TaskResults():
    ''' 
    Class describing the results from a task 

    Attributes:
        status: (str); The status of the task
        return_value (Any): Return value generated by the task
        exception_name (str): Name of the exception that cause the error
        exception_desc (str): description provided along with the exception
        exception_stack (str): The stack of the exception
    '''

    #
    # __init__
    #
    def __init__(
            self,
            status: str = "",
            return_value: Any = None,
            exception_name: str = "",
            exception_desc: str = "",
            exception_stack: str = ""
        ):
        '''
        Initializes the instance.

        Args:
            status (str): The task status
            return_value (Any): Value returned by the callable used to start
                the task
            exception_name (str): The name of the exception if one occured
            exception_desc (str): The description of the exception if one
                occured
            exception_stack (str): The exception stack if one occured
        
        Returns:
            None

        Raises:
            None
        '''
        # Private properties

        # Attributes
        self.status = status
        self.return_value = return_value
        self.exception_name = exception_name
        self.exception_desc = exception_desc
        self.exception_stack = exception_stack


###########################################################################
#
# In case this is run directly rather than imported...
#
###########################################################################
'''
Handle case of being run directly rather than imported
'''
if __name__ == "__main__":
    pass
